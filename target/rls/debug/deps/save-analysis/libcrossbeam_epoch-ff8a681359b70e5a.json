{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1","program":"/usr/local/google/home/flebron/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=ff8a681359b70e5a","-C","extra-filename=-ff8a681359b70e5a","--out-dir","/usr/local/google/home/flebron/rust/target/rls/debug/deps","-L","dependency=/usr/local/google/home/flebron/rust/target/rls/debug/deps","--extern","cfg_if=/usr/local/google/home/flebron/rust/target/rls/debug/deps/libcfg_if-4719a84d436c21a0.rmeta","--extern","const_fn=/usr/local/google/home/flebron/rust/target/rls/debug/deps/libconst_fn-e9d39f52eb45e408.so","--extern","crossbeam_utils=/usr/local/google/home/flebron/rust/target/rls/debug/deps/libcrossbeam_utils-63d91a6d2cbf5978.rmeta","--extern","lazy_static=/usr/local/google/home/flebron/rust/target/rls/debug/deps/liblazy_static-9fbe2dfcbc5171f1.rmeta","--extern","memoffset=/usr/local/google/home/flebron/rust/target/rls/debug/deps/libmemoffset-92f74ad262509463.rmeta","--extern","scopeguard=/usr/local/google/home/flebron/rust/target/rls/debug/deps/libscopeguard-9e10cac201e10554.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/usr/local/google/home/flebron/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/usr/local/google/home/flebron/rust/target/rls/debug/deps/libcrossbeam_epoch-ff8a681359b70e5a.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[16672148178802243570,14569939313407745763]},"crate_root":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src","external_crates":[{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9744254129402482468,12445345062611050884]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","num":2,"id":{"name":"core","disambiguator":[9942249472390543209,15863006584859964888]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1795893391416169141,8075121191677772249]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1572415099058457553,2135166978196155506]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13603829026942055011,2471063435589406066]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3150535728137067081,14418570958612661587]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7556171729466642164,9608667095244489899]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10806810126330215714,2553684360462883780]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1818097271180387350,15438349324121503308]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4437646126609693087,6536018436310544926]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11991037487279530558,3795792059683432706]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1437858958743878161,787253638674005063]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4592710621585877372,1780610752140463821]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[6338654217379816643,7168927451833124687]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18193432317814560663,14768114254071685082]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[12647259490832872807,4960225096531867135]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[8559662747993890479,3650412061717966503]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[11482398188549601317,12004218384876829191]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","num":19,"id":{"name":"const_fn","disambiguator":[3295639751629443214,11460876795394639993]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","num":20,"id":{"name":"crossbeam_utils","disambiguator":[17641464138523393901,9573350058268567848]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","num":21,"id":{"name":"lazy_static","disambiguator":[10582890326764300823,12078812139612991752]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","num":22,"id":{"name":"scopeguard","disambiguator":[8429608773996667793,1338591022182584044]}},{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","num":23,"id":{"name":"memoffset","disambiguator":[10060332370246459098,14346470501939383600]}}],"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":0,"byte_end":3845,"line_start":1,"line_end":91,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3500,"byte_end":3509,"line_start":80,"line_end":80,"column_start":32,"column_end":41},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3511,"byte_end":3517,"line_start":80,"line_end":80,"column_start":43,"column_end":49},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3519,"byte_end":3537,"line_start":80,"line_end":80,"column_start":51,"column_end":69},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3539,"byte_end":3560,"line_start":80,"line_end":80,"column_start":71,"column_end":92},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3562,"byte_end":3567,"line_start":80,"line_end":80,"column_start":94,"column_end":99},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":162},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3569,"byte_end":3576,"line_start":80,"line_end":80,"column_start":101,"column_end":108},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3578,"byte_end":3584,"line_start":80,"line_end":80,"column_start":110,"column_end":116},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3621,"byte_end":3630,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":297},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3632,"byte_end":3643,"line_start":81,"line_end":81,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3676,"byte_end":3687,"line_start":82,"line_end":82,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3689,"byte_end":3694,"line_start":82,"line_end":82,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3802,"byte_end":3819,"line_start":89,"line_end":89,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":644},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3821,"byte_end":3830,"line_start":89,"line_end":89,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":642},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3832,"byte_end":3835,"line_start":89,"line_end":89,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":0,"byte_end":3845,"line_start":1,"line_end":91,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":274},{"krate":0,"index":307},{"krate":0,"index":332},{"krate":0,"index":348},{"krate":0,"index":386},{"krate":0,"index":477},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":636},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2855,"byte_end":2926,"line_start":58,"line_end":58,"column_start":1,"column_end":72}},{"value":"allow(clippy :: match_like_matches_macro)","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3120,"byte_end":3163,"line_start":63,"line_end":63,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":29},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7148142,"byte_end":7148160,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareAndSetError { current, new }","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7148071,"byte_end":7148130,"line_start":28,"line_end":28,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":33},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7148290,"byte_end":7148297,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareAndSetError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7148209,"byte_end":7148281,"line_start":30,"line_end":30,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":34},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7148383,"byte_end":7148386,"line_start":34,"line_end":34,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareAndSetError::new","value":"P","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7148319,"byte_end":7148374,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7149275,"byte_end":7149296,"line_start":57,"line_end":57,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7148705,"byte_end":7148757,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7148758,"byte_end":7148761,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7148762,"byte_end":7148853,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7148854,"byte_end":7148946,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7148947,"byte_end":7148950,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7148951,"byte_end":7149016,"line_start":51,"line_end":51,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7149017,"byte_end":7149020,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7149021,"byte_end":7149115,"line_start":53,"line_end":53,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7149116,"byte_end":7149142,"line_start":54,"line_end":54,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7149143,"byte_end":7149235,"line_start":55,"line_end":55,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7149236,"byte_end":7149264,"line_start":56,"line_end":56,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7149362,"byte_end":7149369,"line_start":59,"line_end":59,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7149303,"byte_end":7149354,"line_start":58,"line_end":58,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7149587,"byte_end":7149594,"line_start":65,"line_end":65,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7149395,"byte_end":7149443,"line_start":61,"line_end":61,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7149448,"byte_end":7149451,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7149456,"byte_end":7149549,"line_start":63,"line_end":63,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7149554,"byte_end":7149579,"line_start":64,"line_end":64,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151902,"byte_end":7151911,"line_start":138,"line_end":138,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7150929,"byte_end":7150976,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7150977,"byte_end":7150980,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7150981,"byte_end":7151079,"line_start":120,"line_end":120,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151080,"byte_end":7151175,"line_start":121,"line_end":121,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151176,"byte_end":7151238,"line_start":122,"line_end":122,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151239,"byte_end":7151242,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151243,"byte_end":7151335,"line_start":124,"line_end":124,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151336,"byte_end":7151435,"line_start":125,"line_end":125,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151436,"byte_end":7151536,"line_start":126,"line_end":126,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151537,"byte_end":7151559,"line_start":127,"line_end":127,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151560,"byte_end":7151563,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151564,"byte_end":7151657,"line_start":129,"line_end":129,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151658,"byte_end":7151729,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151730,"byte_end":7151733,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151734,"byte_end":7151741,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151742,"byte_end":7151772,"line_start":133,"line_end":133,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151773,"byte_end":7151804,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151805,"byte_end":7151808,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151809,"byte_end":7151883,"line_start":136,"line_end":136,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151884,"byte_end":7151891,"line_start":137,"line_end":137,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":58},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151958,"byte_end":7151963,"line_start":140,"line_end":140,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151918,"byte_end":7151947,"line_start":139,"line_end":139,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152017,"byte_end":7152021,"line_start":143,"line_end":143,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7151977,"byte_end":7152007,"line_start":142,"line_end":142,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152173,"byte_end":7152177,"line_start":150,"line_end":150,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152028,"byte_end":7152073,"line_start":145,"line_end":145,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152078,"byte_end":7152081,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152086,"byte_end":7152098,"line_start":147,"line_end":147,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152103,"byte_end":7152106,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152111,"byte_end":7152158,"line_start":149,"line_end":149,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152541,"byte_end":7152546,"line_start":159,"line_end":159,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152211,"byte_end":7152246,"line_start":152,"line_end":152,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152251,"byte_end":7152254,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152259,"byte_end":7152271,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152276,"byte_end":7152279,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152284,"byte_end":7152360,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152365,"byte_end":7152433,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152438,"byte_end":7152526,"line_start":158,"line_end":158,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152945,"byte_end":7152954,"line_start":169,"line_end":169,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152581,"byte_end":7152624,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152629,"byte_end":7152632,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152637,"byte_end":7152649,"line_start":163,"line_end":163,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152654,"byte_end":7152657,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152662,"byte_end":7152738,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152743,"byte_end":7152811,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152816,"byte_end":7152906,"line_start":167,"line_end":167,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152911,"byte_end":7152930,"line_start":168,"line_end":168,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7153367,"byte_end":7153371,"line_start":179,"line_end":179,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7152993,"byte_end":7153046,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7153051,"byte_end":7153054,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7153059,"byte_end":7153071,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7153076,"byte_end":7153079,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7153084,"byte_end":7153160,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7153165,"byte_end":7153233,"line_start":176,"line_end":176,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7153238,"byte_end":7153328,"line_start":177,"line_end":177,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7153333,"byte_end":7153352,"line_start":178,"line_end":178,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":91},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156346,"byte_end":7156352,"line_start":275,"line_end":275,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7155828,"byte_end":7155892,"line_start":266,"line_end":266,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7155893,"byte_end":7155896,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7155897,"byte_end":7155995,"line_start":268,"line_end":268,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7155996,"byte_end":7156093,"line_start":269,"line_end":269,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156094,"byte_end":7156165,"line_start":270,"line_end":270,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156166,"byte_end":7156169,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156170,"byte_end":7156250,"line_start":272,"line_end":272,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156251,"byte_end":7156254,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156255,"byte_end":7156334,"line_start":274,"line_end":274,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156838,"byte_end":7156841,"line_start":293,"line_end":293,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156605,"byte_end":7156687,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156692,"byte_end":7156695,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156700,"byte_end":7156714,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156719,"byte_end":7156722,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156727,"byte_end":7156734,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156739,"byte_end":7156771,"line_start":289,"line_end":289,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156776,"byte_end":7156779,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156784,"byte_end":7156814,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156819,"byte_end":7156826,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7157185,"byte_end":7157189,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156944,"byte_end":7157026,"line_start":299,"line_end":299,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7157031,"byte_end":7157034,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7157039,"byte_end":7157053,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7157058,"byte_end":7157061,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7157066,"byte_end":7157073,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7157078,"byte_end":7157110,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7157115,"byte_end":7157118,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7157123,"byte_end":7157161,"line_start":306,"line_end":306,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7157166,"byte_end":7157173,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7157738,"byte_end":7157742,"line_start":331,"line_end":331,"column_start":18,"column_end":22},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"cfg(not(feature = \"nightly\"))","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7157688,"byte_end":7157720,"line_start":330,"line_end":330,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158327,"byte_end":7158331,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7157869,"byte_end":7157914,"line_start":338,"line_end":338,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7157919,"byte_end":7157922,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7157927,"byte_end":7158017,"line_start":340,"line_end":340,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158022,"byte_end":7158036,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158041,"byte_end":7158044,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158049,"byte_end":7158063,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158068,"byte_end":7158071,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158076,"byte_end":7158083,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158088,"byte_end":7158137,"line_start":346,"line_end":346,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158142,"byte_end":7158186,"line_start":347,"line_end":347,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158191,"byte_end":7158194,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158199,"byte_end":7158229,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158234,"byte_end":7158264,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158269,"byte_end":7158303,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158308,"byte_end":7158315,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159338,"byte_end":7159350,"line_start":378,"line_end":378,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158461,"byte_end":7158540,"line_start":357,"line_end":357,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158545,"byte_end":7158548,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158553,"byte_end":7158626,"line_start":359,"line_end":359,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158631,"byte_end":7158707,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158712,"byte_end":7158783,"line_start":361,"line_end":361,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158788,"byte_end":7158862,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158867,"byte_end":7158890,"line_start":363,"line_end":363,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158895,"byte_end":7158898,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158903,"byte_end":7158978,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7158983,"byte_end":7159057,"line_start":366,"line_end":366,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159062,"byte_end":7159096,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159101,"byte_end":7159104,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159109,"byte_end":7159123,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159128,"byte_end":7159131,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159136,"byte_end":7159143,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159148,"byte_end":7159197,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159202,"byte_end":7159205,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159210,"byte_end":7159240,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159245,"byte_end":7159275,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159280,"byte_end":7159314,"line_start":376,"line_end":376,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159319,"byte_end":7159326,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159958,"byte_end":7159963,"line_start":397,"line_end":397,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159470,"byte_end":7159535,"line_start":382,"line_end":382,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159540,"byte_end":7159543,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159548,"byte_end":7159638,"line_start":384,"line_end":384,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159643,"byte_end":7159657,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159662,"byte_end":7159665,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159670,"byte_end":7159684,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159689,"byte_end":7159692,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159697,"byte_end":7159704,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159709,"byte_end":7159758,"line_start":390,"line_end":390,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159763,"byte_end":7159807,"line_start":391,"line_end":391,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159812,"byte_end":7159815,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159820,"byte_end":7159850,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159855,"byte_end":7159891,"line_start":394,"line_end":394,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159896,"byte_end":7159934,"line_start":395,"line_end":395,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7159939,"byte_end":7159946,"line_start":396,"line_end":396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160613,"byte_end":7160617,"line_start":417,"line_end":417,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160070,"byte_end":7160158,"line_start":401,"line_end":401,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160163,"byte_end":7160176,"line_start":402,"line_end":402,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160181,"byte_end":7160184,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160189,"byte_end":7160279,"line_start":404,"line_end":404,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160284,"byte_end":7160298,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160303,"byte_end":7160306,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160311,"byte_end":7160325,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160330,"byte_end":7160333,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160338,"byte_end":7160345,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160350,"byte_end":7160407,"line_start":410,"line_end":410,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160412,"byte_end":7160456,"line_start":411,"line_end":411,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160461,"byte_end":7160464,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160469,"byte_end":7160499,"line_start":413,"line_end":413,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160504,"byte_end":7160534,"line_start":414,"line_end":414,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160539,"byte_end":7160589,"line_start":415,"line_end":415,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160594,"byte_end":7160601,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161884,"byte_end":7161899,"line_start":445,"line_end":445,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160788,"byte_end":7160884,"line_start":421,"line_end":421,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160889,"byte_end":7160983,"line_start":422,"line_end":422,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7160988,"byte_end":7161059,"line_start":423,"line_end":423,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161064,"byte_end":7161067,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161072,"byte_end":7161167,"line_start":425,"line_end":425,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161172,"byte_end":7161263,"line_start":426,"line_end":426,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161268,"byte_end":7161281,"line_start":427,"line_end":427,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161286,"byte_end":7161289,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161294,"byte_end":7161379,"line_start":429,"line_end":429,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161384,"byte_end":7161415,"line_start":430,"line_end":430,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161420,"byte_end":7161423,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161428,"byte_end":7161442,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161447,"byte_end":7161450,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161455,"byte_end":7161462,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161467,"byte_end":7161531,"line_start":435,"line_end":435,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161536,"byte_end":7161580,"line_start":436,"line_end":436,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161585,"byte_end":7161588,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161593,"byte_end":7161623,"line_start":438,"line_end":438,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161628,"byte_end":7161631,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161636,"byte_end":7161666,"line_start":440,"line_end":440,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161671,"byte_end":7161708,"line_start":441,"line_end":441,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161713,"byte_end":7161783,"line_start":442,"line_end":442,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161788,"byte_end":7161860,"line_start":443,"line_end":443,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7161865,"byte_end":7161872,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7164368,"byte_end":7164388,"line_start":514,"line_end":514,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7162568,"byte_end":7162664,"line_start":468,"line_end":468,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7162669,"byte_end":7162763,"line_start":469,"line_end":469,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7162768,"byte_end":7162839,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7162844,"byte_end":7162847,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7162852,"byte_end":7162946,"line_start":472,"line_end":472,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7162951,"byte_end":7163046,"line_start":473,"line_end":473,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163051,"byte_end":7163141,"line_start":474,"line_end":474,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163146,"byte_end":7163230,"line_start":475,"line_end":475,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163235,"byte_end":7163238,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163243,"byte_end":7163328,"line_start":477,"line_end":477,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163333,"byte_end":7163364,"line_start":478,"line_end":478,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163369,"byte_end":7163372,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163377,"byte_end":7163425,"line_start":480,"line_end":480,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163430,"byte_end":7163433,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163438,"byte_end":7163452,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163457,"byte_end":7163460,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163465,"byte_end":7163472,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163477,"byte_end":7163541,"line_start":485,"line_end":485,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163546,"byte_end":7163590,"line_start":486,"line_end":486,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163595,"byte_end":7163598,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163603,"byte_end":7163633,"line_start":488,"line_end":488,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163638,"byte_end":7163668,"line_start":489,"line_end":489,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163673,"byte_end":7163676,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163681,"byte_end":7163716,"line_start":491,"line_end":491,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163721,"byte_end":7163761,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163766,"byte_end":7163776,"line_start":493,"line_end":493,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163781,"byte_end":7163844,"line_start":494,"line_end":494,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163849,"byte_end":7163871,"line_start":495,"line_end":495,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163876,"byte_end":7163900,"line_start":496,"line_end":496,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163905,"byte_end":7163927,"line_start":497,"line_end":497,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163932,"byte_end":7163945,"line_start":498,"line_end":498,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163950,"byte_end":7163975,"line_start":499,"line_end":499,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7163980,"byte_end":7164014,"line_start":500,"line_end":500,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7164019,"byte_end":7164049,"line_start":501,"line_end":501,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7164054,"byte_end":7164067,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7164072,"byte_end":7164081,"line_start":503,"line_end":503,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7164086,"byte_end":7164091,"line_start":504,"line_end":504,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7164096,"byte_end":7164099,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7164104,"byte_end":7164145,"line_start":506,"line_end":506,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7164150,"byte_end":7164160,"line_start":507,"line_end":507,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7164165,"byte_end":7164240,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7164245,"byte_end":7164272,"line_start":509,"line_end":509,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7164277,"byte_end":7164320,"line_start":510,"line_end":510,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7164325,"byte_end":7164334,"line_start":511,"line_end":511,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7164339,"byte_end":7164344,"line_start":512,"line_end":512,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7164349,"byte_end":7164356,"line_start":513,"line_end":513,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165793,"byte_end":7165802,"line_start":556,"line_end":556,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165062,"byte_end":7165101,"line_start":537,"line_end":537,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165106,"byte_end":7165109,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165114,"byte_end":7165208,"line_start":539,"line_end":539,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165213,"byte_end":7165269,"line_start":540,"line_end":540,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165274,"byte_end":7165277,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165282,"byte_end":7165372,"line_start":542,"line_end":542,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165377,"byte_end":7165391,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165396,"byte_end":7165399,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165404,"byte_end":7165418,"line_start":545,"line_end":545,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165423,"byte_end":7165426,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165431,"byte_end":7165438,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165443,"byte_end":7165500,"line_start":548,"line_end":548,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165505,"byte_end":7165549,"line_start":549,"line_end":549,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165554,"byte_end":7165557,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165562,"byte_end":7165622,"line_start":551,"line_end":551,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165627,"byte_end":7165657,"line_start":552,"line_end":552,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165662,"byte_end":7165717,"line_start":553,"line_end":553,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165722,"byte_end":7165769,"line_start":554,"line_end":554,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165774,"byte_end":7165781,"line_start":555,"line_end":555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166701,"byte_end":7166709,"line_start":579,"line_end":579,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7165973,"byte_end":7166011,"line_start":560,"line_end":560,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166016,"byte_end":7166019,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166024,"byte_end":7166117,"line_start":562,"line_end":562,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166122,"byte_end":7166178,"line_start":563,"line_end":563,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166183,"byte_end":7166186,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166191,"byte_end":7166281,"line_start":565,"line_end":565,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166286,"byte_end":7166300,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166305,"byte_end":7166308,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166313,"byte_end":7166327,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166332,"byte_end":7166335,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166340,"byte_end":7166347,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166352,"byte_end":7166409,"line_start":571,"line_end":571,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166414,"byte_end":7166458,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166463,"byte_end":7166466,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166471,"byte_end":7166531,"line_start":574,"line_end":574,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166536,"byte_end":7166566,"line_start":575,"line_end":575,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166571,"byte_end":7166625,"line_start":576,"line_end":576,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166630,"byte_end":7166677,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166682,"byte_end":7166689,"line_start":578,"line_end":578,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167609,"byte_end":7167618,"line_start":602,"line_end":602,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166878,"byte_end":7166917,"line_start":583,"line_end":583,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166922,"byte_end":7166925,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7166930,"byte_end":7167024,"line_start":585,"line_end":585,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167029,"byte_end":7167085,"line_start":586,"line_end":586,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167090,"byte_end":7167093,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167098,"byte_end":7167188,"line_start":588,"line_end":588,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167193,"byte_end":7167207,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167212,"byte_end":7167215,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167220,"byte_end":7167234,"line_start":591,"line_end":591,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167239,"byte_end":7167242,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167247,"byte_end":7167254,"line_start":593,"line_end":593,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167259,"byte_end":7167316,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167321,"byte_end":7167365,"line_start":595,"line_end":595,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167370,"byte_end":7167373,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167378,"byte_end":7167438,"line_start":597,"line_end":597,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167443,"byte_end":7167473,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167478,"byte_end":7167533,"line_start":599,"line_end":599,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167538,"byte_end":7167585,"line_start":600,"line_end":600,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167590,"byte_end":7167597,"line_start":601,"line_end":601,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168915,"byte_end":7168925,"line_start":640,"line_end":640,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167788,"byte_end":7167823,"line_start":606,"line_end":606,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167828,"byte_end":7167831,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167836,"byte_end":7167925,"line_start":608,"line_end":608,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7167930,"byte_end":7168016,"line_start":609,"line_end":609,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168021,"byte_end":7168056,"line_start":610,"line_end":610,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168061,"byte_end":7168064,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168069,"byte_end":7168081,"line_start":612,"line_end":612,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168086,"byte_end":7168089,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168094,"byte_end":7168153,"line_start":614,"line_end":614,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168158,"byte_end":7168161,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168166,"byte_end":7168178,"line_start":616,"line_end":616,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168183,"byte_end":7168186,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168191,"byte_end":7168278,"line_start":618,"line_end":618,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168283,"byte_end":7168316,"line_start":619,"line_end":619,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168321,"byte_end":7168324,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168329,"byte_end":7168343,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168348,"byte_end":7168351,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168356,"byte_end":7168367,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168372,"byte_end":7168391,"line_start":624,"line_end":624,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168396,"byte_end":7168430,"line_start":625,"line_end":625,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168435,"byte_end":7168461,"line_start":626,"line_end":626,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168466,"byte_end":7168493,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168498,"byte_end":7168503,"line_start":628,"line_end":628,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168508,"byte_end":7168511,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168516,"byte_end":7168549,"line_start":630,"line_end":630,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168554,"byte_end":7168582,"line_start":631,"line_end":631,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168587,"byte_end":7168681,"line_start":632,"line_end":632,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168686,"byte_end":7168733,"line_start":633,"line_end":633,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168738,"byte_end":7168758,"line_start":634,"line_end":634,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168763,"byte_end":7168842,"line_start":635,"line_end":635,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168847,"byte_end":7168860,"line_start":636,"line_end":636,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168865,"byte_end":7168874,"line_start":637,"line_end":637,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168879,"byte_end":7168884,"line_start":638,"line_end":638,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7168889,"byte_end":7168896,"line_start":639,"line_end":639,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":162},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7171556,"byte_end":7171563,"line_start":743,"line_end":743,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7171493,"byte_end":7171545,"line_start":742,"line_end":742,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7171655,"byte_end":7171665,"line_start":745,"line_end":745,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7171593,"byte_end":7171647,"line_start":744,"line_end":744,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7171972,"byte_end":7171982,"line_start":753,"line_end":753,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7171687,"byte_end":7171751,"line_start":747,"line_end":747,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7171756,"byte_end":7171759,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7171764,"byte_end":7171776,"line_start":749,"line_end":749,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7171781,"byte_end":7171784,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7171789,"byte_end":7171884,"line_start":751,"line_end":751,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7171889,"byte_end":7171957,"line_start":752,"line_end":752,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7172248,"byte_end":7172253,"line_start":762,"line_end":762,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7172008,"byte_end":7172043,"line_start":756,"line_end":756,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7172044,"byte_end":7172047,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7172048,"byte_end":7172090,"line_start":758,"line_end":758,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7172091,"byte_end":7172094,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7172095,"byte_end":7172193,"line_start":760,"line_end":760,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7172194,"byte_end":7172236,"line_start":761,"line_end":761,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173651,"byte_end":7173659,"line_start":813,"line_end":813,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7172903,"byte_end":7172953,"line_start":791,"line_end":791,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7172958,"byte_end":7172961,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7172966,"byte_end":7173058,"line_start":793,"line_end":793,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173063,"byte_end":7173156,"line_start":794,"line_end":794,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173161,"byte_end":7173186,"line_start":795,"line_end":795,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173191,"byte_end":7173194,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173199,"byte_end":7173211,"line_start":797,"line_end":797,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173216,"byte_end":7173219,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173224,"byte_end":7173268,"line_start":799,"line_end":799,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173273,"byte_end":7173276,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173281,"byte_end":7173293,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173298,"byte_end":7173301,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173306,"byte_end":7173402,"line_start":803,"line_end":803,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173407,"byte_end":7173454,"line_start":804,"line_end":804,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173459,"byte_end":7173462,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173467,"byte_end":7173481,"line_start":806,"line_end":806,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173486,"byte_end":7173489,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173494,"byte_end":7173501,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173506,"byte_end":7173537,"line_start":809,"line_end":809,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173542,"byte_end":7173545,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173550,"byte_end":7173620,"line_start":811,"line_end":811,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173625,"byte_end":7173632,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174057,"byte_end":7174065,"line_start":830,"line_end":830,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173794,"byte_end":7173838,"line_start":819,"line_end":819,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173843,"byte_end":7173846,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173851,"byte_end":7173865,"line_start":821,"line_end":821,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173870,"byte_end":7173873,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173878,"byte_end":7173885,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173890,"byte_end":7173921,"line_start":824,"line_end":824,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173926,"byte_end":7173929,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173934,"byte_end":7173963,"line_start":826,"line_end":826,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7173968,"byte_end":7174003,"line_start":827,"line_end":827,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174008,"byte_end":7174033,"line_start":828,"line_end":828,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174038,"byte_end":7174045,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174454,"byte_end":7174457,"line_start":845,"line_end":845,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174224,"byte_end":7174305,"line_start":836,"line_end":836,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174310,"byte_end":7174313,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174318,"byte_end":7174332,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174337,"byte_end":7174340,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174345,"byte_end":7174352,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174357,"byte_end":7174388,"line_start":841,"line_end":841,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174393,"byte_end":7174396,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174401,"byte_end":7174430,"line_start":843,"line_end":843,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174435,"byte_end":7174442,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174796,"byte_end":7174800,"line_start":860,"line_end":860,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174558,"byte_end":7174639,"line_start":851,"line_end":851,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174644,"byte_end":7174647,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174652,"byte_end":7174666,"line_start":853,"line_end":853,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174671,"byte_end":7174674,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174679,"byte_end":7174686,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174691,"byte_end":7174722,"line_start":856,"line_end":856,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174727,"byte_end":7174730,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174735,"byte_end":7174772,"line_start":858,"line_end":858,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174777,"byte_end":7174784,"line_start":859,"line_end":859,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175221,"byte_end":7175232,"line_start":876,"line_end":876,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174892,"byte_end":7174941,"line_start":864,"line_end":864,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174946,"byte_end":7174949,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174954,"byte_end":7174968,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174973,"byte_end":7174976,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174981,"byte_end":7174988,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174993,"byte_end":7175041,"line_start":869,"line_end":869,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175046,"byte_end":7175049,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175054,"byte_end":7175083,"line_start":871,"line_end":871,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175088,"byte_end":7175118,"line_start":872,"line_end":872,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175123,"byte_end":7175156,"line_start":873,"line_end":873,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175161,"byte_end":7175168,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175173,"byte_end":7175209,"line_start":875,"line_end":875,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175552,"byte_end":7175555,"line_start":889,"line_end":889,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175344,"byte_end":7175390,"line_start":880,"line_end":880,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175395,"byte_end":7175398,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175403,"byte_end":7175417,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175422,"byte_end":7175425,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175430,"byte_end":7175437,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175442,"byte_end":7175473,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175478,"byte_end":7175481,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175486,"byte_end":7175528,"line_start":887,"line_end":887,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175533,"byte_end":7175540,"line_start":888,"line_end":888,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7176028,"byte_end":7176036,"line_start":907,"line_end":907,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175651,"byte_end":7175741,"line_start":894,"line_end":894,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175746,"byte_end":7175784,"line_start":895,"line_end":895,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175789,"byte_end":7175792,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175797,"byte_end":7175811,"line_start":897,"line_end":897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175816,"byte_end":7175819,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175824,"byte_end":7175831,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175836,"byte_end":7175867,"line_start":900,"line_end":900,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175872,"byte_end":7175875,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175880,"byte_end":7175909,"line_start":902,"line_end":902,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175914,"byte_end":7175941,"line_start":903,"line_end":903,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175946,"byte_end":7175972,"line_start":904,"line_end":904,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7175977,"byte_end":7176004,"line_start":905,"line_end":905,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7176009,"byte_end":7176016,"line_start":906,"line_end":906,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178498,"byte_end":7178504,"line_start":1010,"line_end":1010,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178219,"byte_end":7178272,"line_start":1004,"line_end":1004,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178273,"byte_end":7178276,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178277,"byte_end":7178340,"line_start":1006,"line_end":1006,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178341,"byte_end":7178344,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178345,"byte_end":7178443,"line_start":1008,"line_end":1008,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178444,"byte_end":7178486,"line_start":1009,"line_end":1009,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179675,"byte_end":7179681,"line_start":1059,"line_end":1059,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179156,"byte_end":7179216,"line_start":1042,"line_end":1042,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179221,"byte_end":7179224,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179229,"byte_end":7179243,"line_start":1044,"line_end":1044,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179248,"byte_end":7179251,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179256,"byte_end":7179263,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179268,"byte_end":7179324,"line_start":1047,"line_end":1047,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179329,"byte_end":7179373,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179378,"byte_end":7179381,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179386,"byte_end":7179415,"line_start":1050,"line_end":1050,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179420,"byte_end":7179450,"line_start":1051,"line_end":1051,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179455,"byte_end":7179483,"line_start":1052,"line_end":1052,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179488,"byte_end":7179491,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179496,"byte_end":7179526,"line_start":1054,"line_end":1054,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179531,"byte_end":7179565,"line_start":1055,"line_end":1055,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179570,"byte_end":7179602,"line_start":1056,"line_end":1056,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179607,"byte_end":7179614,"line_start":1057,"line_end":1057,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179619,"byte_end":7179663,"line_start":1058,"line_end":1058,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180058,"byte_end":7180062,"line_start":1076,"line_end":1076,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179842,"byte_end":7179873,"line_start":1066,"line_end":1066,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179878,"byte_end":7179881,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179886,"byte_end":7179900,"line_start":1068,"line_end":1068,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179905,"byte_end":7179908,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179913,"byte_end":7179920,"line_start":1070,"line_end":1070,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179925,"byte_end":7179957,"line_start":1071,"line_end":1071,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179962,"byte_end":7179965,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179970,"byte_end":7180004,"line_start":1073,"line_end":1073,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180009,"byte_end":7180034,"line_start":1074,"line_end":1074,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180039,"byte_end":7180046,"line_start":1075,"line_end":1075,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180668,"byte_end":7180675,"line_start":1098,"line_end":1098,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180177,"byte_end":7180219,"line_start":1083,"line_end":1083,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180224,"byte_end":7180227,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180232,"byte_end":7180246,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180251,"byte_end":7180254,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180259,"byte_end":7180266,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180271,"byte_end":7180327,"line_start":1088,"line_end":1088,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180332,"byte_end":7180376,"line_start":1089,"line_end":1089,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180381,"byte_end":7180384,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180389,"byte_end":7180416,"line_start":1091,"line_end":1091,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180421,"byte_end":7180451,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180456,"byte_end":7180501,"line_start":1093,"line_end":1093,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180506,"byte_end":7180544,"line_start":1094,"line_end":1094,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180549,"byte_end":7180595,"line_start":1095,"line_end":1095,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180600,"byte_end":7180607,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180612,"byte_end":7180656,"line_start":1097,"line_end":1097,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182049,"byte_end":7182054,"line_start":1136,"line_end":1136,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180775,"byte_end":7180804,"line_start":1103,"line_end":1103,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180809,"byte_end":7180812,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180817,"byte_end":7180895,"line_start":1105,"line_end":1105,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180900,"byte_end":7180903,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180908,"byte_end":7180920,"line_start":1107,"line_end":1107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180925,"byte_end":7180928,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7180933,"byte_end":7181018,"line_start":1109,"line_end":1109,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181023,"byte_end":7181026,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181031,"byte_end":7181122,"line_start":1111,"line_end":1111,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181127,"byte_end":7181176,"line_start":1112,"line_end":1112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181181,"byte_end":7181184,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181189,"byte_end":7181261,"line_start":1114,"line_end":1114,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181266,"byte_end":7181341,"line_start":1115,"line_end":1115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181346,"byte_end":7181349,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181354,"byte_end":7181447,"line_start":1117,"line_end":1117,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181452,"byte_end":7181545,"line_start":1118,"line_end":1118,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181550,"byte_end":7181588,"line_start":1119,"line_end":1119,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181593,"byte_end":7181596,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181601,"byte_end":7181615,"line_start":1121,"line_end":1121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181620,"byte_end":7181623,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181628,"byte_end":7181635,"line_start":1123,"line_end":1123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181640,"byte_end":7181689,"line_start":1124,"line_end":1124,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181694,"byte_end":7181738,"line_start":1125,"line_end":1125,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181743,"byte_end":7181746,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181751,"byte_end":7181781,"line_start":1127,"line_end":1127,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181786,"byte_end":7181816,"line_start":1128,"line_end":1128,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181821,"byte_end":7181855,"line_start":1129,"line_end":1129,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181860,"byte_end":7181872,"line_start":1130,"line_end":1130,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181877,"byte_end":7181914,"line_start":1131,"line_end":1131,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181919,"byte_end":7181924,"line_start":1132,"line_end":1132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181929,"byte_end":7181936,"line_start":1133,"line_end":1133,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181941,"byte_end":7181985,"line_start":1134,"line_end":1134,"column_start":5,"column_end":49}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7181990,"byte_end":7182030,"line_start":1135,"line_end":1135,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183365,"byte_end":7183374,"line_start":1178,"line_end":1178,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182160,"byte_end":7182189,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182194,"byte_end":7182197,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182202,"byte_end":7182288,"line_start":1143,"line_end":1143,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182293,"byte_end":7182296,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182301,"byte_end":7182313,"line_start":1145,"line_end":1145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182318,"byte_end":7182321,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182326,"byte_end":7182421,"line_start":1147,"line_end":1147,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182426,"byte_end":7182463,"line_start":1148,"line_end":1148,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182468,"byte_end":7182471,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182476,"byte_end":7182565,"line_start":1150,"line_end":1150,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182570,"byte_end":7182573,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182578,"byte_end":7182652,"line_start":1152,"line_end":1152,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182657,"byte_end":7182660,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182665,"byte_end":7182679,"line_start":1154,"line_end":1154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182684,"byte_end":7182687,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182692,"byte_end":7182699,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182704,"byte_end":7182753,"line_start":1157,"line_end":1157,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182758,"byte_end":7182802,"line_start":1158,"line_end":1158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182807,"byte_end":7182810,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182815,"byte_end":7182857,"line_start":1160,"line_end":1160,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182862,"byte_end":7182892,"line_start":1161,"line_end":1161,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182897,"byte_end":7182900,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182905,"byte_end":7182943,"line_start":1163,"line_end":1163,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182948,"byte_end":7182960,"line_start":1164,"line_end":1164,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7182965,"byte_end":7182995,"line_start":1165,"line_end":1165,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183000,"byte_end":7183030,"line_start":1166,"line_end":1166,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183035,"byte_end":7183076,"line_start":1167,"line_end":1167,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183081,"byte_end":7183099,"line_start":1168,"line_end":1168,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183104,"byte_end":7183148,"line_start":1169,"line_end":1169,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183153,"byte_end":7183158,"line_start":1170,"line_end":1170,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183163,"byte_end":7183166,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183171,"byte_end":7183205,"line_start":1172,"line_end":1172,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183210,"byte_end":7183222,"line_start":1173,"line_end":1173,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183227,"byte_end":7183279,"line_start":1174,"line_end":1174,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183284,"byte_end":7183289,"line_start":1175,"line_end":1175,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183294,"byte_end":7183301,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183306,"byte_end":7183346,"line_start":1177,"line_end":1177,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184756,"byte_end":7184762,"line_start":1215,"line_end":1215,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183492,"byte_end":7183532,"line_start":1183,"line_end":1183,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183537,"byte_end":7183540,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183545,"byte_end":7183640,"line_start":1185,"line_end":1185,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183645,"byte_end":7183648,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183653,"byte_end":7183665,"line_start":1187,"line_end":1187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183670,"byte_end":7183673,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183678,"byte_end":7183763,"line_start":1189,"line_end":1189,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183768,"byte_end":7183771,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183776,"byte_end":7183867,"line_start":1191,"line_end":1191,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183872,"byte_end":7183921,"line_start":1192,"line_end":1192,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183926,"byte_end":7183929,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7183934,"byte_end":7184006,"line_start":1194,"line_end":1194,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184011,"byte_end":7184086,"line_start":1195,"line_end":1195,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184091,"byte_end":7184094,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184099,"byte_end":7184192,"line_start":1197,"line_end":1197,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184197,"byte_end":7184290,"line_start":1198,"line_end":1198,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184295,"byte_end":7184333,"line_start":1199,"line_end":1199,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184338,"byte_end":7184341,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184346,"byte_end":7184360,"line_start":1201,"line_end":1201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184365,"byte_end":7184368,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184373,"byte_end":7184380,"line_start":1203,"line_end":1203,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184385,"byte_end":7184434,"line_start":1204,"line_end":1204,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184439,"byte_end":7184483,"line_start":1205,"line_end":1205,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184488,"byte_end":7184491,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184496,"byte_end":7184526,"line_start":1207,"line_end":1207,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184531,"byte_end":7184561,"line_start":1208,"line_end":1208,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184566,"byte_end":7184600,"line_start":1209,"line_end":1209,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184605,"byte_end":7184617,"line_start":1210,"line_end":1210,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184622,"byte_end":7184666,"line_start":1211,"line_end":1211,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184671,"byte_end":7184676,"line_start":1212,"line_end":1212,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184681,"byte_end":7184688,"line_start":1213,"line_end":1213,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184693,"byte_end":7184737,"line_start":1214,"line_end":1214,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185622,"byte_end":7185632,"line_start":1248,"line_end":1248,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184952,"byte_end":7184987,"line_start":1224,"line_end":1224,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7184992,"byte_end":7184995,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185000,"byte_end":7185012,"line_start":1226,"line_end":1226,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185017,"byte_end":7185020,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185025,"byte_end":7185084,"line_start":1228,"line_end":1228,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185089,"byte_end":7185092,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185097,"byte_end":7185109,"line_start":1230,"line_end":1230,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185114,"byte_end":7185117,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185122,"byte_end":7185209,"line_start":1232,"line_end":1232,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185214,"byte_end":7185247,"line_start":1233,"line_end":1233,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185252,"byte_end":7185255,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185260,"byte_end":7185274,"line_start":1235,"line_end":1235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185279,"byte_end":7185282,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185287,"byte_end":7185294,"line_start":1237,"line_end":1237,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185299,"byte_end":7185348,"line_start":1238,"line_end":1238,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185353,"byte_end":7185397,"line_start":1239,"line_end":1239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185402,"byte_end":7185405,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185410,"byte_end":7185440,"line_start":1241,"line_end":1241,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185445,"byte_end":7185457,"line_start":1242,"line_end":1242,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185462,"byte_end":7185504,"line_start":1243,"line_end":1243,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185509,"byte_end":7185547,"line_start":1244,"line_end":1244,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185552,"byte_end":7185581,"line_start":1245,"line_end":1245,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185586,"byte_end":7185591,"line_start":1246,"line_end":1246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185596,"byte_end":7185603,"line_start":1247,"line_end":1247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186241,"byte_end":7186244,"line_start":1267,"line_end":1267,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185784,"byte_end":7185830,"line_start":1253,"line_end":1253,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185835,"byte_end":7185838,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185843,"byte_end":7185857,"line_start":1255,"line_end":1255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185862,"byte_end":7185865,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185870,"byte_end":7185877,"line_start":1257,"line_end":1257,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185882,"byte_end":7185938,"line_start":1258,"line_end":1258,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185943,"byte_end":7185987,"line_start":1259,"line_end":1259,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7185992,"byte_end":7185995,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186000,"byte_end":7186062,"line_start":1261,"line_end":1261,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186067,"byte_end":7186097,"line_start":1262,"line_end":1262,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186102,"byte_end":7186136,"line_start":1263,"line_end":1263,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186141,"byte_end":7186168,"line_start":1264,"line_end":1264,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186173,"byte_end":7186180,"line_start":1265,"line_end":1265,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186185,"byte_end":7186229,"line_start":1266,"line_end":1266,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186967,"byte_end":7186975,"line_start":1291,"line_end":1291,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186340,"byte_end":7186430,"line_start":1272,"line_end":1272,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186435,"byte_end":7186473,"line_start":1273,"line_end":1273,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186478,"byte_end":7186481,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186486,"byte_end":7186500,"line_start":1275,"line_end":1275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186505,"byte_end":7186508,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186513,"byte_end":7186520,"line_start":1277,"line_end":1277,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186525,"byte_end":7186574,"line_start":1278,"line_end":1278,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186579,"byte_end":7186623,"line_start":1279,"line_end":1279,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186628,"byte_end":7186631,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186636,"byte_end":7186666,"line_start":1281,"line_end":1281,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186671,"byte_end":7186701,"line_start":1282,"line_end":1282,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186706,"byte_end":7186741,"line_start":1283,"line_end":1283,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186746,"byte_end":7186774,"line_start":1284,"line_end":1284,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186779,"byte_end":7186782,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186787,"byte_end":7186815,"line_start":1286,"line_end":1286,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186820,"byte_end":7186848,"line_start":1287,"line_end":1287,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186853,"byte_end":7186894,"line_start":1288,"line_end":1288,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186899,"byte_end":7186906,"line_start":1289,"line_end":1289,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7186911,"byte_end":7186955,"line_start":1290,"line_end":1290,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":281},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189486,"byte_end":7189495,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":282}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189437,"byte_end":7189474,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189802,"byte_end":7189805,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189762,"byte_end":7189790,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189910,"byte_end":7189918,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189853,"byte_end":7189898,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":297},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190586,"byte_end":7190597,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":298}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190538,"byte_end":7190574,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190708,"byte_end":7190711,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190662,"byte_end":7190682,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190687,"byte_end":7190696,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190849,"byte_end":7190858,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190780,"byte_end":7190823,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190828,"byte_end":7190837,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7191014,"byte_end":7191023,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190932,"byte_end":7190988,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190993,"byte_end":7191002,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209911,"byte_end":7209916,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":357}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208195,"byte_end":7208244,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208245,"byte_end":7208248,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208249,"byte_end":7208262,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208263,"byte_end":7208266,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208267,"byte_end":7208346,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208347,"byte_end":7208350,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208351,"byte_end":7208358,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208359,"byte_end":7208392,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208393,"byte_end":7208396,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208397,"byte_end":7208495,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208496,"byte_end":7208588,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208589,"byte_end":7208619,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208620,"byte_end":7208627,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208628,"byte_end":7208631,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208632,"byte_end":7208708,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208709,"byte_end":7208712,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208713,"byte_end":7208740,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208741,"byte_end":7208744,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208745,"byte_end":7208832,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208833,"byte_end":7208849,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208850,"byte_end":7208853,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208854,"byte_end":7208861,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208862,"byte_end":7208911,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208912,"byte_end":7208956,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208957,"byte_end":7208960,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7208961,"byte_end":7208999,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209000,"byte_end":7209029,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209030,"byte_end":7209033,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209034,"byte_end":7209064,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209065,"byte_end":7209095,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209096,"byte_end":7209099,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209100,"byte_end":7209174,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209175,"byte_end":7209209,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209210,"byte_end":7209213,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209214,"byte_end":7209265,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209266,"byte_end":7209312,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209313,"byte_end":7209356,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209357,"byte_end":7209362,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209363,"byte_end":7209370,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209371,"byte_end":7209374,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209375,"byte_end":7209396,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209397,"byte_end":7209400,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209401,"byte_end":7209496,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209497,"byte_end":7209595,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209596,"byte_end":7209615,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209616,"byte_end":7209619,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209620,"byte_end":7209627,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209628,"byte_end":7209661,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209662,"byte_end":7209665,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209666,"byte_end":7209696,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209697,"byte_end":7209727,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209728,"byte_end":7209760,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209761,"byte_end":7209778,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209779,"byte_end":7209811,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209812,"byte_end":7209829,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209830,"byte_end":7209863,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209864,"byte_end":7209871,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209872,"byte_end":7209875,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209876,"byte_end":7209899,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7210891,"byte_end":7210896,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209975,"byte_end":7210064,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7210069,"byte_end":7210094,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7210099,"byte_end":7210102,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7210107,"byte_end":7210200,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7210205,"byte_end":7210293,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7210298,"byte_end":7210388,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7210393,"byte_end":7210433,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7210438,"byte_end":7210441,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7210446,"byte_end":7210536,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7210541,"byte_end":7210632,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7210637,"byte_end":7210724,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7210729,"byte_end":7210749,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7210754,"byte_end":7210757,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7210762,"byte_end":7210849,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7210854,"byte_end":7210879,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7215196,"byte_end":7215211,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211060,"byte_end":7211149,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211154,"byte_end":7211179,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211184,"byte_end":7211187,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211192,"byte_end":7211285,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211290,"byte_end":7211378,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211383,"byte_end":7211473,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211478,"byte_end":7211518,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211523,"byte_end":7211526,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211531,"byte_end":7211621,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211626,"byte_end":7211717,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211722,"byte_end":7211809,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211814,"byte_end":7211834,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211839,"byte_end":7211842,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211847,"byte_end":7211934,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211939,"byte_end":7211964,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211969,"byte_end":7211972,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211977,"byte_end":7211989,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7211994,"byte_end":7211997,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212002,"byte_end":7212094,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212099,"byte_end":7212186,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212191,"byte_end":7212203,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212208,"byte_end":7212211,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212216,"byte_end":7212223,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212228,"byte_end":7212261,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212266,"byte_end":7212269,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212274,"byte_end":7212304,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212309,"byte_end":7212336,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212341,"byte_end":7212353,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212358,"byte_end":7212433,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212438,"byte_end":7212477,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212482,"byte_end":7212518,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212523,"byte_end":7212534,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212539,"byte_end":7212544,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212549,"byte_end":7212556,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212561,"byte_end":7212564,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212569,"byte_end":7212663,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212668,"byte_end":7212699,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212704,"byte_end":7212707,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212712,"byte_end":7212807,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212812,"byte_end":7212904,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7212909,"byte_end":7212998,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213003,"byte_end":7213006,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213011,"byte_end":7213024,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213029,"byte_end":7213082,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213087,"byte_end":7213169,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213174,"byte_end":7213181,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213186,"byte_end":7213189,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213194,"byte_end":7213287,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213292,"byte_end":7213387,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213392,"byte_end":7213452,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213457,"byte_end":7213460,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213465,"byte_end":7213479,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213484,"byte_end":7213487,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213492,"byte_end":7213578,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213583,"byte_end":7213677,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213682,"byte_end":7213778,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213783,"byte_end":7213875,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213880,"byte_end":7213936,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213941,"byte_end":7213944,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213949,"byte_end":7213956,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7213961,"byte_end":7214017,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214022,"byte_end":7214066,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214071,"byte_end":7214074,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214079,"byte_end":7214110,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214115,"byte_end":7214118,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214123,"byte_end":7214200,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214205,"byte_end":7214236,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214241,"byte_end":7214244,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214249,"byte_end":7214279,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214284,"byte_end":7214314,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214319,"byte_end":7214322,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214327,"byte_end":7214404,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214409,"byte_end":7214481,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214486,"byte_end":7214489,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214494,"byte_end":7214515,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214520,"byte_end":7214580,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214585,"byte_end":7214667,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214672,"byte_end":7214688,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214693,"byte_end":7214772,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214777,"byte_end":7214820,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214825,"byte_end":7214893,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214898,"byte_end":7214990,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7214995,"byte_end":7215079,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7215084,"byte_end":7215121,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7215126,"byte_end":7215141,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7215146,"byte_end":7215155,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7215160,"byte_end":7215165,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7215170,"byte_end":7215177,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218798,"byte_end":7218811,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7215450,"byte_end":7215543,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7215548,"byte_end":7215600,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7215605,"byte_end":7215608,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7215613,"byte_end":7215706,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7215711,"byte_end":7215801,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7215806,"byte_end":7215895,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7215900,"byte_end":7215954,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7215959,"byte_end":7215962,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7215967,"byte_end":7216060,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216065,"byte_end":7216158,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216163,"byte_end":7216256,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216261,"byte_end":7216292,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216297,"byte_end":7216300,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216305,"byte_end":7216394,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216399,"byte_end":7216424,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216429,"byte_end":7216432,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216437,"byte_end":7216449,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216454,"byte_end":7216457,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216462,"byte_end":7216555,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216560,"byte_end":7216593,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216598,"byte_end":7216601,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216606,"byte_end":7216701,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216706,"byte_end":7216744,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216749,"byte_end":7216752,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216757,"byte_end":7216852,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216857,"byte_end":7216949,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7216954,"byte_end":7217043,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217048,"byte_end":7217051,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217056,"byte_end":7217069,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217074,"byte_end":7217127,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217132,"byte_end":7217191,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217196,"byte_end":7217203,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217208,"byte_end":7217211,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217216,"byte_end":7217310,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217315,"byte_end":7217402,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217407,"byte_end":7217467,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217472,"byte_end":7217475,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217480,"byte_end":7217494,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217499,"byte_end":7217502,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217507,"byte_end":7217593,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217598,"byte_end":7217692,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217697,"byte_end":7217793,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217798,"byte_end":7217890,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217895,"byte_end":7217951,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217956,"byte_end":7217959,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217964,"byte_end":7217971,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7217976,"byte_end":7218032,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218037,"byte_end":7218081,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218086,"byte_end":7218089,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218094,"byte_end":7218125,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218130,"byte_end":7218133,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218138,"byte_end":7218215,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218220,"byte_end":7218251,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218256,"byte_end":7218259,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218264,"byte_end":7218294,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218299,"byte_end":7218329,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218334,"byte_end":7218337,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218342,"byte_end":7218419,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218424,"byte_end":7218496,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218501,"byte_end":7218504,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218509,"byte_end":7218530,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218535,"byte_end":7218595,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218600,"byte_end":7218682,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218687,"byte_end":7218703,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218708,"byte_end":7218743,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218748,"byte_end":7218757,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218762,"byte_end":7218767,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218772,"byte_end":7218779,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219696,"byte_end":7219701,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7218911,"byte_end":7219006,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219011,"byte_end":7219028,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219033,"byte_end":7219036,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219041,"byte_end":7219135,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219140,"byte_end":7219232,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219237,"byte_end":7219305,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219310,"byte_end":7219313,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219318,"byte_end":7219410,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219415,"byte_end":7219418,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219423,"byte_end":7219437,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219442,"byte_end":7219445,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219450,"byte_end":7219457,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219462,"byte_end":7219495,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219500,"byte_end":7219503,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219508,"byte_end":7219538,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219543,"byte_end":7219568,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219573,"byte_end":7219637,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219642,"byte_end":7219649,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219654,"byte_end":7219672,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219677,"byte_end":7219684,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220863,"byte_end":7220868,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219825,"byte_end":7219876,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219881,"byte_end":7219884,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219889,"byte_end":7219979,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7219984,"byte_end":7220078,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220083,"byte_end":7220177,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220182,"byte_end":7220234,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220239,"byte_end":7220242,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220247,"byte_end":7220340,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220345,"byte_end":7220348,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220353,"byte_end":7220367,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220372,"byte_end":7220375,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220380,"byte_end":7220387,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220392,"byte_end":7220441,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220446,"byte_end":7220490,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220495,"byte_end":7220498,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220503,"byte_end":7220532,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220537,"byte_end":7220570,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220575,"byte_end":7220580,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220585,"byte_end":7220624,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220629,"byte_end":7220683,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220688,"byte_end":7220693,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220698,"byte_end":7220716,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220721,"byte_end":7220726,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220731,"byte_end":7220770,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220775,"byte_end":7220829,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220834,"byte_end":7220839,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220844,"byte_end":7220851,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7222195,"byte_end":7222206,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7220992,"byte_end":7221083,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221088,"byte_end":7221091,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221096,"byte_end":7221187,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221192,"byte_end":7221288,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221293,"byte_end":7221387,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221392,"byte_end":7221411,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221416,"byte_end":7221419,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221424,"byte_end":7221518,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221523,"byte_end":7221565,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221570,"byte_end":7221573,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221578,"byte_end":7221592,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221597,"byte_end":7221600,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221605,"byte_end":7221612,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221617,"byte_end":7221666,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221671,"byte_end":7221715,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221720,"byte_end":7221740,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221745,"byte_end":7221773,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221778,"byte_end":7221781,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221786,"byte_end":7221815,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221820,"byte_end":7221853,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221858,"byte_end":7221863,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221868,"byte_end":7221907,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221912,"byte_end":7221966,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221971,"byte_end":7221976,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7221981,"byte_end":7222048,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7222053,"byte_end":7222058,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7222063,"byte_end":7222102,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7222107,"byte_end":7222161,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7222166,"byte_end":7222171,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7222176,"byte_end":7222183,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223352,"byte_end":7223361,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7222811,"byte_end":7222866,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7222871,"byte_end":7222874,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7222879,"byte_end":7222954,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7222959,"byte_end":7223009,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223014,"byte_end":7223017,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223022,"byte_end":7223106,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223111,"byte_end":7223114,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223119,"byte_end":7223133,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223138,"byte_end":7223141,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223146,"byte_end":7223153,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223158,"byte_end":7223191,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223196,"byte_end":7223199,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223204,"byte_end":7223234,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223239,"byte_end":7223269,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223274,"byte_end":7223328,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223333,"byte_end":7223340,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":380},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226660,"byte_end":7226671,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223771,"byte_end":7223858,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223859,"byte_end":7223862,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223863,"byte_end":7223958,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223959,"byte_end":7224048,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224049,"byte_end":7224052,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224053,"byte_end":7224146,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224147,"byte_end":7224184,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224185,"byte_end":7224188,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224189,"byte_end":7224285,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224286,"byte_end":7224289,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224290,"byte_end":7224302,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224303,"byte_end":7224306,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224307,"byte_end":7224397,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224398,"byte_end":7224465,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224466,"byte_end":7224469,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224470,"byte_end":7224484,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224485,"byte_end":7224488,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224489,"byte_end":7224496,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224497,"byte_end":7224546,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224547,"byte_end":7224592,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224593,"byte_end":7224596,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224597,"byte_end":7224624,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224625,"byte_end":7224628,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224629,"byte_end":7224641,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224642,"byte_end":7224697,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224698,"byte_end":7224744,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224745,"byte_end":7224748,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224749,"byte_end":7224823,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224824,"byte_end":7224874,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224875,"byte_end":7224878,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224879,"byte_end":7224908,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224909,"byte_end":7224965,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224966,"byte_end":7224977,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224978,"byte_end":7224981,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7224982,"byte_end":7225063,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225064,"byte_end":7225069,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225070,"byte_end":7225077,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225078,"byte_end":7225081,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225082,"byte_end":7225176,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225177,"byte_end":7225180,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225181,"byte_end":7225275,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225276,"byte_end":7225361,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225362,"byte_end":7225365,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225366,"byte_end":7225465,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225466,"byte_end":7225564,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225565,"byte_end":7225585,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225586,"byte_end":7225589,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225590,"byte_end":7225597,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225598,"byte_end":7225647,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225648,"byte_end":7225679,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225680,"byte_end":7225725,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225726,"byte_end":7225729,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225730,"byte_end":7225751,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225752,"byte_end":7225782,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225783,"byte_end":7225788,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225789,"byte_end":7225792,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225793,"byte_end":7225813,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225814,"byte_end":7225844,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225845,"byte_end":7225875,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225876,"byte_end":7225881,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225882,"byte_end":7225885,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225886,"byte_end":7225917,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225918,"byte_end":7225946,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225947,"byte_end":7225967,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7225968,"byte_end":7226004,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226005,"byte_end":7226082,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226083,"byte_end":7226086,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226087,"byte_end":7226138,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226139,"byte_end":7226179,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226180,"byte_end":7226254,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226255,"byte_end":7226258,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226259,"byte_end":7226347,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226348,"byte_end":7226398,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226399,"byte_end":7226451,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226452,"byte_end":7226480,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226481,"byte_end":7226484,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226485,"byte_end":7226517,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226518,"byte_end":7226535,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226536,"byte_end":7226549,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226550,"byte_end":7226559,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226560,"byte_end":7226565,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226566,"byte_end":7226573,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226574,"byte_end":7226577,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226578,"byte_end":7226607,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226608,"byte_end":7226635,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226636,"byte_end":7226645,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":642},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":8249715,"byte_end":8249718,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":8249669,"byte_end":8249697,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":8249698,"byte_end":8249707,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":644},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":8249843,"byte_end":8249852,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":8249774,"byte_end":8249825,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":8249826,"byte_end":8249835,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":646},"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":8249962,"byte_end":8249979,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":8249913,"byte_end":8249954,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7148453,"byte_end":7148471,"line_start":37,"line_end":37,"column_start":60,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7149649,"byte_end":7149657,"line_start":68,"line_end":68,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7153410,"byte_end":7153411,"line_start":182,"line_end":182,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156496,"byte_end":7156502,"line_start":280,"line_end":280,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156567,"byte_end":7156573,"line_start":281,"line_end":281,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156589,"byte_end":7156595,"line_start":283,"line_end":283,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156928,"byte_end":7156934,"line_start":298,"line_end":298,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":672},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":121},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7169048,"byte_end":7169054,"line_start":645,"line_end":645,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7169401,"byte_end":7169407,"line_start":657,"line_end":657,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7169695,"byte_end":7169701,"line_start":665,"line_end":665,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7170048,"byte_end":7170054,"line_start":676,"line_end":676,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7170166,"byte_end":7170172,"line_start":682,"line_end":682,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7170567,"byte_end":7170573,"line_start":699,"line_end":699,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7170676,"byte_end":7170682,"line_start":705,"line_end":705,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7170802,"byte_end":7170808,"line_start":711,"line_end":711,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7171157,"byte_end":7171163,"line_start":726,"line_end":726,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7172376,"byte_end":7172381,"line_start":767,"line_end":767,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7172888,"byte_end":7172893,"line_start":790,"line_end":790,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174543,"byte_end":7174548,"line_start":850,"line_end":850,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7176218,"byte_end":7176223,"line_start":913,"line_end":913,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7176413,"byte_end":7176418,"line_start":922,"line_end":922,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7176696,"byte_end":7176701,"line_start":933,"line_end":933,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7176842,"byte_end":7176847,"line_start":939,"line_end":939,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7177040,"byte_end":7177045,"line_start":948,"line_end":948,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7177211,"byte_end":7177216,"line_start":955,"line_end":955,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7177306,"byte_end":7177311,"line_start":961,"line_end":961,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7177784,"byte_end":7177789,"line_start":980,"line_end":980,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7177899,"byte_end":7177904,"line_start":986,"line_end":986,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178026,"byte_end":7178031,"line_start":992,"line_end":992,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178137,"byte_end":7178142,"line_start":998,"line_end":998,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178643,"byte_end":7178649,"line_start":1015,"line_end":1015,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178823,"byte_end":7178829,"line_start":1024,"line_end":1024,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178884,"byte_end":7178890,"line_start":1026,"line_end":1026,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179136,"byte_end":7179142,"line_start":1041,"line_end":1041,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179822,"byte_end":7179828,"line_start":1065,"line_end":1065,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7187120,"byte_end":7187126,"line_start":1296,"line_end":1296,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7187689,"byte_end":7187695,"line_start":1318,"line_end":1318,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7187822,"byte_end":7187828,"line_start":1324,"line_end":1324,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7187902,"byte_end":7187908,"line_start":1326,"line_end":1326,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7188073,"byte_end":7188079,"line_start":1332,"line_end":1332,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7188227,"byte_end":7188233,"line_start":1338,"line_end":1338,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7188536,"byte_end":7188542,"line_start":1349,"line_end":1349,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7188733,"byte_end":7188739,"line_start":1355,"line_end":1355,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189558,"byte_end":7189567,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189592,"byte_end":7189601,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189623,"byte_end":7189632,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189746,"byte_end":7189755,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189997,"byte_end":7190006,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190204,"byte_end":7190213,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190341,"byte_end":7190350,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190524,"byte_end":7190533,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190644,"byte_end":7190655,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7191115,"byte_end":7191126,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7191273,"byte_end":7191284,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/deferred.rs","byte_start":7201222,"byte_end":7201230,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/deferred.rs","byte_start":7201354,"byte_end":7201362,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/epoch.rs","byte_start":7205209,"byte_end":7205214,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/epoch.rs","byte_start":7206969,"byte_end":7206980,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209963,"byte_end":7209968,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223486,"byte_end":7223491,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223661,"byte_end":7223666,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226950,"byte_end":7226962,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7229994,"byte_end":7229997,"line_start":70,"line_end":70,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7230007,"byte_end":7230010,"line_start":72,"line_end":72,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7230937,"byte_end":7230940,"line_start":107,"line_end":107,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7234218,"byte_end":7234221,"line_start":192,"line_end":192,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7234620,"byte_end":7234623,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7235049,"byte_end":7235058,"line_start":222,"line_end":222,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7235068,"byte_end":7235077,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7235752,"byte_end":7235758,"line_start":245,"line_end":245,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7240744,"byte_end":7240749,"line_start":382,"line_end":382,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7249269,"byte_end":7249274,"line_start":602,"line_end":602,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":7255264,"byte_end":7255269,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":7255405,"byte_end":7255410,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":7255916,"byte_end":7255920,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":7258472,"byte_end":7258476,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":7259008,"byte_end":7259012,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":7268790,"byte_end":7268795,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":7268832,"byte_end":7268837,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":7268853,"byte_end":7268858,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":7274472,"byte_end":7274477,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7148453,"byte_end":7148471,"line_start":37,"line_end":37,"column_start":60,"column_end":78},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7149649,"byte_end":7149657,"line_start":68,"line_end":68,"column_start":32,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":31963},"to":{"krate":0,"index":40}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7153410,"byte_end":7153411,"line_start":182,"line_end":182,"column_start":23,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":67},"to":{"krate":0,"index":57}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156496,"byte_end":7156502,"line_start":280,"line_end":280,"column_start":59,"column_end":65},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156567,"byte_end":7156573,"line_start":281,"line_end":281,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156589,"byte_end":7156595,"line_start":283,"line_end":283,"column_start":9,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7156928,"byte_end":7156934,"line_start":298,"line_end":298,"column_start":29,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7169048,"byte_end":7169054,"line_start":645,"line_end":645,"column_start":44,"column_end":50},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7169401,"byte_end":7169407,"line_start":657,"line_end":657,"column_start":46,"column_end":52},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7169695,"byte_end":7169701,"line_start":665,"line_end":665,"column_start":39,"column_end":45},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7170048,"byte_end":7170054,"line_start":676,"line_end":676,"column_start":41,"column_end":47},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7170166,"byte_end":7170172,"line_start":682,"line_end":682,"column_start":48,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7170567,"byte_end":7170573,"line_start":699,"line_end":699,"column_start":26,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7170676,"byte_end":7170682,"line_start":705,"line_end":705,"column_start":21,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7170802,"byte_end":7170808,"line_start":711,"line_end":711,"column_start":57,"column_end":63},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7171157,"byte_end":7171163,"line_start":726,"line_end":726,"column_start":28,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7172376,"byte_end":7172381,"line_start":767,"line_end":767,"column_start":44,"column_end":49},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":166},"to":{"krate":0,"index":162}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7172888,"byte_end":7172893,"line_start":790,"line_end":790,"column_start":9,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7174543,"byte_end":7174548,"line_start":850,"line_end":850,"column_start":29,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7176218,"byte_end":7176223,"line_start":913,"line_end":913,"column_start":38,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7176413,"byte_end":7176418,"line_start":922,"line_end":922,"column_start":44,"column_end":49},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7176696,"byte_end":7176701,"line_start":933,"line_end":933,"column_start":26,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7176842,"byte_end":7176847,"line_start":939,"line_end":939,"column_start":39,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7177040,"byte_end":7177045,"line_start":948,"line_end":948,"column_start":42,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":2244}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7177211,"byte_end":7177216,"line_start":955,"line_end":955,"column_start":21,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7177306,"byte_end":7177311,"line_start":961,"line_end":961,"column_start":26,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7177784,"byte_end":7177789,"line_start":980,"line_end":980,"column_start":43,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1710}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7177899,"byte_end":7177904,"line_start":986,"line_end":986,"column_start":46,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1713}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178026,"byte_end":7178031,"line_start":992,"line_end":992,"column_start":42,"column_end":47},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178137,"byte_end":7178142,"line_start":998,"line_end":998,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1946}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178643,"byte_end":7178649,"line_start":1015,"line_end":1015,"column_start":39,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178823,"byte_end":7178829,"line_start":1024,"line_end":1024,"column_start":38,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7178884,"byte_end":7178890,"line_start":1026,"line_end":1026,"column_start":44,"column_end":50},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":220},"to":{"krate":0,"index":162}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179136,"byte_end":7179142,"line_start":1041,"line_end":1041,"column_start":13,"column_end":19},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7179822,"byte_end":7179828,"line_start":1065,"line_end":1065,"column_start":33,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7187120,"byte_end":7187126,"line_start":1296,"line_end":1296,"column_start":28,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7187689,"byte_end":7187695,"line_start":1318,"line_end":1318,"column_start":62,"column_end":68},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1760}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7187822,"byte_end":7187828,"line_start":1324,"line_end":1324,"column_start":36,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1765}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7187902,"byte_end":7187908,"line_start":1326,"line_end":1326,"column_start":63,"column_end":69},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7188073,"byte_end":7188079,"line_start":1332,"line_end":1332,"column_start":37,"column_end":43},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1786}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7188227,"byte_end":7188233,"line_start":1338,"line_end":1338,"column_start":44,"column_end":50},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7188536,"byte_end":7188542,"line_start":1349,"line_end":1349,"column_start":46,"column_end":52},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":7188733,"byte_end":7188739,"line_start":1355,"line_end":1355,"column_start":41,"column_end":47},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189558,"byte_end":7189567,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189592,"byte_end":7189601,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189623,"byte_end":7189632,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189746,"byte_end":7189755,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7189997,"byte_end":7190006,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190204,"byte_end":7190213,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190341,"byte_end":7190350,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1760}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190524,"byte_end":7190533,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1765}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7190644,"byte_end":7190655,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7191115,"byte_end":7191126,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":7191273,"byte_end":7191284,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/deferred.rs","byte_start":7201222,"byte_end":7201230,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/deferred.rs","byte_start":7201354,"byte_end":7201362,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/epoch.rs","byte_start":7205209,"byte_end":7205214,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/epoch.rs","byte_start":7206969,"byte_end":7206980,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7209963,"byte_end":7209968,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223486,"byte_end":7223491,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7223661,"byte_end":7223666,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":7226950,"byte_end":7226962,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7229994,"byte_end":7229997,"line_start":70,"line_end":70,"column_start":22,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":421},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7230007,"byte_end":7230010,"line_start":72,"line_end":72,"column_start":6,"column_end":9},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7230937,"byte_end":7230940,"line_start":107,"line_end":107,"column_start":18,"column_end":21},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":421},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7234218,"byte_end":7234221,"line_start":192,"line_end":192,"column_start":15,"column_end":18},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":421},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7234620,"byte_end":7234623,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":421},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7235049,"byte_end":7235058,"line_start":222,"line_end":222,"column_start":22,"column_end":31},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":601},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7235068,"byte_end":7235077,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7235752,"byte_end":7235758,"line_start":245,"line_end":245,"column_start":6,"column_end":12},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7240744,"byte_end":7240749,"line_start":382,"line_end":382,"column_start":6,"column_end":11},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":7249269,"byte_end":7249274,"line_start":602,"line_end":602,"column_start":27,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":451},"to":{"krate":0,"index":489}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":7255264,"byte_end":7255269,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":608},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":7255405,"byte_end":7255410,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":7255916,"byte_end":7255920,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":7258472,"byte_end":7258476,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":7259008,"byte_end":7259012,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":494},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":7268790,"byte_end":7268795,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":7268832,"byte_end":7268837,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":7268853,"byte_end":7268858,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/usr/local/google/home/flebron/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":7274472,"byte_end":7274477,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":2255}}]}